// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  ratings       Ratings[]
}

/// Maps User Ids to BCP-47 Language Codes.
model UserLanguages {
  // Key Fields
  id            String    @id

  // Content Fields
  language      String[]
}

/// Maps User Ids and BCP-47 Language Codes to  Annotation Task Type IDs.
model UserLanguageTasks {
  // Key Fields
  id            String
  language      String

  // Content Fields
  annotType     Int[]
  targetLang    String[]
  forwardDir    Boolean[]

  @@id([id, language])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Content {
  // Key Fields
  fprint       String @unique
  language     String

  // Content Fields
  text         String

  // Provenance Fields
  source       Int @default(0)
  license      String?
  origin       String?
  originId     String?

  annotations  Annotations[]

  @@id([fprint, language])
}

model Annotations {
  // Key Fields
  id           BigInt @id @default(autoincrement())

  // Association Fields
  source       Content @relation(fields: [sourceFprint], references: [fprint])
  sourceFprint String
  sourceLang   String

  // Content Fields
  targetLang   String
  text         String
  isComplete   Boolean @default(false)
  annotType    Int @default(0)

  // Provenance Fields
  createdAt    DateTime @default(now())

  ratings      Ratings[]
}

model Ratings {
  // Key Fields
  id           BigInt @id @default(autoincrement())

  // Association Fields
  annotation   Annotations @relation(fields: [annotationId], references: [id])
  annotationId BigInt

  user         User     @relation(fields: [userId], references: [id])
  userId       String

  // Content Fields
  rating       Int

  // Provenance Fields
  createdAt    DateTime @default(now())
}

model TaskMilestones {
  language       String
  targetLang     String
  taskId         Int
  milestoneType  String
  milestone      Int
  progress       Int
  dateUpdated    DateTime @default(now())

  @@id([language, targetLang, taskId, milestoneType])
}

model LanguageDetails {
  language       String @id
  description    String
}

model LanguageFunFacts {
  id             String    @id @default(cuid())
  language       String
  fact           String
}
